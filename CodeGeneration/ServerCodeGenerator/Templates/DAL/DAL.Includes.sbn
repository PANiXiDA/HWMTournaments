{{- $class_name = model_name + "sIncludes" -}}
{{- $db_model = "DbModels." + model_name -}}
{{- $convert_params = model_name + "sConvertParams" -}}

{{- $navigationsCount = 0 -}}
{{- for property in properties -}}
  {{- if property.is_navigation -}}
    {{- $navigationsCount = $navigationsCount + 1 -}}
  {{- end -}}
{{- end -}}

using Common.ConvertParams;
using Microsoft.EntityFrameworkCore;

namespace DAL.Implementations.Includes;

internal static class {{ $class_name }}
{
    internal static IQueryable<{{ $db_model }}> Include(this IQueryable<{{ $db_model }}> dbObjects, {{ $convert_params }} convertParams)
    {
{{~ for property in properties ~}}
{{~ if property.is_navigation ~}}
        if (convertParams.Include{{ property.name }})
        {
            dbObjects = dbObjects.Include(item => item.{{ property.name }});
        }
{{~ end ~}}
{{~ end ~}}
{{~ if $navigationsCount > 0 ~}}

{{~ end ~}}
        return dbObjects;
    }
}
